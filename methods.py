import pandas as pd
import random
import matplotlib.pyplot as plt
import numpy as np

#read in dataset and change name of first column
pdfdataset = pd.read_csv("C:/Users/Laurana Mitchell/Downloads/PDFMalware2022.csv")
pdfdataset.rename(columns = {'Fine name':"File Name"}, inplace = True)
pdfdataset.head()

#number of malicious vs benign
classes_count = pdfdataset['Class'].value_counts()
plt.figure(figsize=(8, 8))
plt.pie(classes_count, labels=classes_count.index, autopct='%1.1f%%')
plt.title('Class Distribution')
plt.show()

    
#nested pie chart of class and text vs class and text
selected_columns = ['Class', 'text']
class_text_df = pdfdataset[selected_columns]

# Replace '-1' and '0' with 'unclear' and 'No', respectively
class_text_df['text'] = class_text_df['text'].replace('-1', 'unclear')
class_text_df['text'] = class_text_df['text'].replace('0', 'No')

# CREATE COPIES OF ORIGINAL DATASET FOR MALICIOUS AND BENIGN CLASS (ESSENTIALLY FILTERING EACH DATASET BY BENIGN AND MALICIOUS)
benign_df = pdfdataset.query('Class == "Benign"')
malicious_df =  pdfdataset.query('Class == "Malicious"')

#BOXPLOT FOR BENIGN PDF SIZE
plt.boxplot(benign_df['pdfsize'], showfliers = False)
plt.xlabel("Benign")
plt.ylabel("Size")
plt.title("Size Boxplot for Benign PDFs")
plt.show()

#HISTOGRAM FOR BENIGN PDF SIZE
b_size = benign_df['pdfsize'].value_counts().sort_index()
b_size = b_size.to_dict()
b_size = {key: val for key, 
            val in b_size.items() if key >= 0 and key <= 500}

plt.bar(b_size.keys(), b_size.values())
plt.xlabel("PDF Size")
plt.ylabel("Frequency")
plt.title("Distribution of Size for Benign PDFs")
plt.show()

#BOXPLOT FOR MALICIOUS PDF SIZE
plt.boxplot(malicious_df['pdfsize'], showfliers = False)
plt.xlabel("Malicious")
plt.ylabel("Size")
plt.title("Size Boxplot for Malicious PDFs")
plt.show()

#HISTOGRAM FOR MALICIOUS PDF SIZE
m_size = malicious_df['pdfsize'].value_counts().sort_index()
m_size = m_size.to_dict()
m_size = {key: val for key, 
            val in m_size.items() if key >= 0 and key <= 2500}

plt.bar(m_size.keys(), m_size.values())
plt.xlabel("PDF Size")
plt.ylabel("Frequency")
plt.title("Distribution of Size for Malicious PDFs")
plt.show()